<?php

namespace App\Http\Controllers;

use App\User;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;

class UserController extends Controller
{
	/**
	 * Variable to model
	 *
	 * @var User
	 */
	protected $model;

	/**
	 * Create instance of controller with Model
	 *
	 * @return void
	 */
	public function __construct(User $model)
	{
		$this->model = $model;
	}

	/**
	 * Display a listing of the resource.
	 *
	 * @return Response
	 */
	public function index()
	{
		$users = $this->model->paginate();

		return view('users.index', compact('users'));
	}

	/**
	 * Show the form for creating a new resource.
	 *
	 * @return Response
	 */
	public function create()
	{
		return view('users.create');
	}

	/**
	 * Store a newly created resource in storage.
	 *
	 * @param Request $request
	 * @return Response
	 */
	public function store(Request $request)
	{
		//
		// // Create a new User instance
		// $user = new User;
		//
		// // Set our new user information
		// $user->name = $request->name;
		// $user->password = bcrypt($request->password);
		// $user->email = $request->email;
		//
		// // Save our new User instance
		// $user->save();
		//
		// //$users->ad->title = request('ad');
		//
		// // Return the user back to the form with a success message
		// return back()->with('status', 'Success, the user "' . $user->name . '" has been created');
		// 

		$inputs = $request->all();
		$this->model->create($inputs);

		return redirect()->route('users.index')->with('message', 'Item created successfully.');
	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
		$User = $this->model->findOrFail($id);

		return view('users.show', compact('User'));
	}

	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		$User = $this->model->findOrFail($id);

		return view('users.edit', compact('User'));
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  int  $id
	 * @param Request $request
	 * @return Response
	 */
	public function update(Request $request, $id)
	{
		$inputs = $request->all();

		$User = $this->model->findOrFail($id);
		$User->update($inputs);

		return redirect()->route('users.index')->with('message', 'Item updated successfully.');
	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		$this->model->destroy($id);

		return redirect()->route('users.index')->with('message', 'Item deleted successfully.');
	}
}
